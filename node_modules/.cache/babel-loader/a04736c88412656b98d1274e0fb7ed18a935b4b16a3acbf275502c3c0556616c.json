{"ast":null,"code":"export const contactService = {\n  getContacts,\n  getContactById,\n  deleteContact,\n  saveContact,\n  getEmptyContact\n};\nconst contacts = [{\n  \"_id\": \"5a56640269f443a5d64b32ca\",\n  \"name\": \"Ochoa Hyde\",\n  \"email\": \"ochoahyde@renovize.com\",\n  \"phone\": \"+1 (968) 593-3824\",\n  \"keyword\": \"blond\",\n  \"avatarUrl\": \"\"\n}, {\n  \"_id\": \"5a5664025f6ae9aa24a99fde\",\n  \"name\": \"Hallie Mclean\",\n  \"email\": \"halliemclean@renovize.com\",\n  \"phone\": \"+1 (948) 464-2888\",\n  \"keyword\": \"melanin\",\n  \"avatarUrl\": \"\"\n}, {\n  \"_id\": \"5a56640252d6acddd183d319\",\n  \"name\": \"Parsons Norris\",\n  \"email\": \"parsonsnorris@renovize.com\",\n  \"phone\": \"+1 (958) 502-3495\",\n  \"keyword\": \"businessman\",\n  \"avatarUrl\": \"\"\n}, {\n  \"_id\": \"5a566402ed1cf349f0b47b4d\",\n  \"name\": \"Rachel Lowe\",\n  \"email\": \"rachellowe@renovize.com\",\n  \"phone\": \"+1 (911) 475-2312\",\n  \"keyword\": \"profile\",\n  \"avatarUrl\": \"\"\n}, {\n  \"_id\": \"5a566402abce24c6bfe4699d\",\n  \"name\": \"Dominique Soto\",\n  \"email\": \"dominiquesoto@renovize.com\",\n  \"phone\": \"+1 (807) 551-3258\",\n  \"keyword\": \"brunette\",\n  \"avatarUrl\": \"\"\n}, {\n  \"_id\": \"5a566402a6499c1d4da9220a\",\n  \"name\": \"Shana Pope\",\n  \"email\": \"shanapope@renovize.com\",\n  \"phone\": \"+1 (970) 527-3082\",\n  \"keyword\": \"sophisticated\",\n  \"avatarUrl\": \"\"\n}, {\n  \"_id\": \"5a566402f90ae30e97f990db\",\n  \"name\": \"Faulkner Flores\",\n  \"email\": \"faulknerflores@renovize.com\",\n  \"phone\": \"+1 (952) 501-2678\",\n  \"keyword\": \"bearded\",\n  \"avatarUrl\": \"\"\n}, {\n  \"_id\": \"5a5664027bae84ef280ffbdf\",\n  \"name\": \"Holder Bean\",\n  \"email\": \"holderbean@renovize.com\",\n  \"phone\": \"+1 (989) 503-2663\",\n  \"keyword\": \"human\",\n  \"avatarUrl\": \"\"\n}, {\n  \"_id\": \"5a566402e3b846c5f6aec652\",\n  \"name\": \"Rosanne Shelton\",\n  \"email\": \"rosanneshelton@renovize.com\",\n  \"phone\": \"+1 (968) 454-3851\",\n  \"keyword\": \"girl\",\n  \"avatarUrl\": \"\"\n}, {\n  \"_id\": \"5a56640272c7dcdf59c3d411\",\n  \"name\": \"Pamela Nolan\",\n  \"email\": \"pamelanolan@renovize.com\",\n  \"phone\": \"+1 (986) 545-2166\",\n  \"keyword\": \"woman\",\n  \"avatarUrl\": \"\"\n}, {\n  \"_id\": \"5a5664029a8dd82a6178b15f\",\n  \"name\": \"Roy Cantu\",\n  \"email\": \"roycantu@renovize.com\",\n  \"phone\": \"+1 (929) 571-2295\",\n  \"keyword\": \"male\",\n  \"avatarUrl\": \"\"\n}, {\n  \"_id\": \"5a5664028c096d08eeb13a8a\",\n  \"name\": \"Ollie Christian\",\n  \"email\": \"olliechristian@renovize.com\",\n  \"phone\": \"+1 (977) 419-3550\",\n  \"keyword\": \"teenager\",\n  \"avatarUrl\": \"\"\n}, {\n  \"_id\": \"5a5664026c53582bb9ebe9d1\",\n  \"name\": \"Nguyen Walls\",\n  \"email\": \"nguyenwalls@renovize.com\",\n  \"phone\": \"+1 (963) 471-3181\",\n  \"keyword\": \"philipina\",\n  \"avatarUrl\": \"\"\n}, {\n  \"_id\": \"5a56640298ab77236845b82b\",\n  \"name\": \"Glenna Santana\",\n  \"email\": \"glennasantana@renovize.com\",\n  \"phone\": \"+1 (860) 467-2376\",\n  \"keyword\": \"beautiful\",\n  \"avatarUrl\": \"\"\n}, {\n  \"_id\": \"5a56640208fba3e8ecb97305\",\n  \"name\": \"Malone Clark\",\n  \"email\": \"maloneclark@renovize.com\",\n  \"phone\": \"+1 (818) 565-2557\",\n  \"keyword\": \"gangster\",\n  \"avatarUrl\": \"\"\n}, {\n  \"_id\": \"5a566402abb3146207bc4ec5\",\n  \"name\": \"Floyd Rutledge\",\n  \"email\": \"floydrutledge@renovize.com\",\n  \"phone\": \"+1 (807) 597-3629\",\n  \"keyword\": \"guy\",\n  \"avatarUrl\": \"\"\n}, {\n  \"_id\": \"5a56640298500fead8cb1ee5\",\n  \"name\": \"Grace James\",\n  \"email\": \"gracejames@renovize.com\",\n  \"phone\": \"+1 (959) 525-2529\",\n  \"keyword\": \"beauty\",\n  \"avatarUrl\": \"\"\n}, {\n  \"_id\": \"5a56640243427b8f8445231e\",\n  \"name\": \"Tanner Gates\",\n  \"email\": \"tannergates@renovize.com\",\n  \"phone\": \"+1 (978) 591-2291\",\n  \"keyword\": \"beard\",\n  \"avatarUrl\": \"\"\n}, {\n  \"_id\": \"5a5664025c3abdad6f5e098c\",\n  \"name\": \"Lilly Conner\",\n  \"email\": \"lillyconner@renovize.com\",\n  \"phone\": \"+1 (842) 587-3812\",\n  \"keyword\": \"hair\",\n  \"avatarUrl\": \"\"\n}];\nfunction getContactAvatarUrl(keyword) {\n  return `https://source.unsplash.com/300x300/?portrait&${keyword}`;\n}\ncontacts.forEach(contact => {\n  const avatarUrl = getContactAvatarUrl(contact.keyword);\n  contact.avatarUrl = avatarUrl;\n});\nfunction sort(arr) {\n  return arr.sort((a, b) => a.name.localeCompare(b.name, undefined, {\n    sensitivity: 'base'\n  }));\n}\nfunction getContacts() {\n  let filterBy = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n  return new Promise((resolve, reject) => {\n    var contactsToReturn = contacts;\n    if (filterBy) {\n      contactsToReturn = filter(filterBy);\n    }\n    resolve(sort(contactsToReturn));\n  });\n}\nfunction getContactById(id) {\n  return new Promise((resolve, reject) => {\n    const contact = contacts.find(contact => contact._id === id);\n    contact ? resolve(contact) : reject(`Contact id ${id} not found!`);\n  });\n}\nfunction deleteContact(id) {\n  return new Promise((resolve, reject) => {\n    const index = contacts.findIndex(contact => contact._id === id);\n    if (index !== -1) {\n      contacts.splice(index, 1);\n    }\n    resolve(contacts);\n  });\n}\nfunction _updateContact(contact) {\n  return new Promise((resolve, reject) => {\n    const index = contacts.findIndex(c => contact._id === c._id);\n    if (index !== -1) {\n      contacts[index] = contact;\n    }\n    resolve(contact);\n  });\n}\nfunction _addContact(contact) {\n  return new Promise((resolve, reject) => {\n    contact._id = _makeId();\n    contacts.push(contact);\n    resolve(contact);\n  });\n}\nfunction saveContact(contact) {\n  return contact._id ? _updateContact(contact) : _addContact(contact);\n}\nfunction getEmptyContact() {\n  return {\n    name: '',\n    email: '',\n    phone: ''\n  };\n}\nfunction filter(filterBy) {\n  const keys = Object.keys(filterBy);\n  if (keys.every(field => !filterBy[field])) return contacts;\n  return contacts.filter(contact => {\n    return keys.some(field => {\n      const filterValue = filterBy[field];\n      const fieldValue = contact[field];\n      if (!filterValue || !fieldValue) return false;\n      const regex = new RegExp(filterValue.toString().toLocaleLowerCase(), 'i');\n      return regex.test(fieldValue.toString());\n    });\n  });\n}\nfunction _makeId() {\n  let length = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 10;\n  var txt = '';\n  var possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n  for (let i = 0; i < length; i++) {\n    txt += possible.charAt(Math.floor(Math.random() * possible.length));\n  }\n  return txt;\n}","map":{"version":3,"names":["contactService","getContacts","getContactById","deleteContact","saveContact","getEmptyContact","contacts","getContactAvatarUrl","keyword","forEach","contact","avatarUrl","sort","arr","a","b","name","localeCompare","undefined","sensitivity","filterBy","arguments","length","Promise","resolve","reject","contactsToReturn","filter","id","find","_id","index","findIndex","splice","_updateContact","c","_addContact","_makeId","push","email","phone","keys","Object","every","field","some","filterValue","fieldValue","regex","RegExp","toString","toLocaleLowerCase","test","txt","possible","i","charAt","Math","floor","random"],"sources":["C:/Users/rania/Desktop/Coding/btcoinrania/src/services/contact.service.js"],"sourcesContent":["export const contactService = {\n    getContacts,\n    getContactById,\n    deleteContact,\n    saveContact,\n    getEmptyContact\n}\n\nconst contacts = [\n    {\n        \"_id\": \"5a56640269f443a5d64b32ca\",\n        \"name\": \"Ochoa Hyde\",\n        \"email\": \"ochoahyde@renovize.com\",\n        \"phone\": \"+1 (968) 593-3824\",\n        \"keyword\": \"blond\",\n        \"avatarUrl\": \"\"\n    },\n    {\n        \"_id\": \"5a5664025f6ae9aa24a99fde\",\n        \"name\": \"Hallie Mclean\",\n        \"email\": \"halliemclean@renovize.com\",\n        \"phone\": \"+1 (948) 464-2888\",\n        \"keyword\": \"melanin\",\n        \"avatarUrl\": \"\"\n    },\n    {\n        \"_id\": \"5a56640252d6acddd183d319\",\n        \"name\": \"Parsons Norris\",\n        \"email\": \"parsonsnorris@renovize.com\",\n        \"phone\": \"+1 (958) 502-3495\",\n        \"keyword\": \"businessman\",\n        \"avatarUrl\": \"\"\n    },\n    {\n        \"_id\": \"5a566402ed1cf349f0b47b4d\",\n        \"name\": \"Rachel Lowe\",\n        \"email\": \"rachellowe@renovize.com\",\n        \"phone\": \"+1 (911) 475-2312\",\n        \"keyword\": \"profile\",\n        \"avatarUrl\": \"\"\n    },\n    {\n        \"_id\": \"5a566402abce24c6bfe4699d\",\n        \"name\": \"Dominique Soto\",\n        \"email\": \"dominiquesoto@renovize.com\",\n        \"phone\": \"+1 (807) 551-3258\",\n        \"keyword\": \"brunette\",\n        \"avatarUrl\": \"\"\n    },\n    {\n        \"_id\": \"5a566402a6499c1d4da9220a\",\n        \"name\": \"Shana Pope\",\n        \"email\": \"shanapope@renovize.com\",\n        \"phone\": \"+1 (970) 527-3082\",\n        \"keyword\": \"sophisticated\",\n        \"avatarUrl\": \"\"\n    },\n    {\n        \"_id\": \"5a566402f90ae30e97f990db\",\n        \"name\": \"Faulkner Flores\",\n        \"email\": \"faulknerflores@renovize.com\",\n        \"phone\": \"+1 (952) 501-2678\",\n        \"keyword\": \"bearded\",\n        \"avatarUrl\": \"\"\n    },\n    {\n        \"_id\": \"5a5664027bae84ef280ffbdf\",\n        \"name\": \"Holder Bean\",\n        \"email\": \"holderbean@renovize.com\",\n        \"phone\": \"+1 (989) 503-2663\",\n        \"keyword\": \"human\",\n        \"avatarUrl\": \"\"\n    },\n    {\n        \"_id\": \"5a566402e3b846c5f6aec652\",\n        \"name\": \"Rosanne Shelton\",\n        \"email\": \"rosanneshelton@renovize.com\",\n        \"phone\": \"+1 (968) 454-3851\",\n        \"keyword\": \"girl\",\n        \"avatarUrl\": \"\"\n    },\n    {\n        \"_id\": \"5a56640272c7dcdf59c3d411\",\n        \"name\": \"Pamela Nolan\",\n        \"email\": \"pamelanolan@renovize.com\",\n        \"phone\": \"+1 (986) 545-2166\",\n        \"keyword\": \"woman\",\n        \"avatarUrl\": \"\"\n    },\n    {\n        \"_id\": \"5a5664029a8dd82a6178b15f\",\n        \"name\": \"Roy Cantu\",\n        \"email\": \"roycantu@renovize.com\",\n        \"phone\": \"+1 (929) 571-2295\",\n        \"keyword\": \"male\",\n        \"avatarUrl\": \"\"\n    },\n    {\n        \"_id\": \"5a5664028c096d08eeb13a8a\",\n        \"name\": \"Ollie Christian\",\n        \"email\": \"olliechristian@renovize.com\",\n        \"phone\": \"+1 (977) 419-3550\",\n        \"keyword\": \"teenager\",\n        \"avatarUrl\": \"\"\n    },\n    {\n        \"_id\": \"5a5664026c53582bb9ebe9d1\",\n        \"name\": \"Nguyen Walls\",\n        \"email\": \"nguyenwalls@renovize.com\",\n        \"phone\": \"+1 (963) 471-3181\",\n        \"keyword\": \"philipina\",\n        \"avatarUrl\": \"\"\n    },\n    {\n        \"_id\": \"5a56640298ab77236845b82b\",\n\n        \"name\": \"Glenna Santana\",\n        \"email\": \"glennasantana@renovize.com\",\n        \"phone\": \"+1 (860) 467-2376\",\n        \"keyword\": \"beautiful\",\n        \"avatarUrl\": \"\"\n    },\n    {\n        \"_id\": \"5a56640208fba3e8ecb97305\",\n        \"name\": \"Malone Clark\",\n        \"email\": \"maloneclark@renovize.com\",\n        \"phone\": \"+1 (818) 565-2557\",\n        \"keyword\": \"gangster\",\n        \"avatarUrl\": \"\"\n    },\n    {\n        \"_id\": \"5a566402abb3146207bc4ec5\",\n        \"name\": \"Floyd Rutledge\",\n        \"email\": \"floydrutledge@renovize.com\",\n        \"phone\": \"+1 (807) 597-3629\",\n        \"keyword\": \"guy\",\n        \"avatarUrl\": \"\"\n    },\n    {\n        \"_id\": \"5a56640298500fead8cb1ee5\",\n        \"name\": \"Grace James\",\n        \"email\": \"gracejames@renovize.com\",\n        \"phone\": \"+1 (959) 525-2529\",\n        \"keyword\": \"beauty\",\n        \"avatarUrl\": \"\"\n    },\n    {\n        \"_id\": \"5a56640243427b8f8445231e\",\n        \"name\": \"Tanner Gates\",\n        \"email\": \"tannergates@renovize.com\",\n        \"phone\": \"+1 (978) 591-2291\",\n        \"keyword\": \"beard\",\n        \"avatarUrl\": \"\"\n    },\n    {\n        \"_id\": \"5a5664025c3abdad6f5e098c\",\n        \"name\": \"Lilly Conner\",\n        \"email\": \"lillyconner@renovize.com\",\n        \"phone\": \"+1 (842) 587-3812\",\n        \"keyword\": \"hair\",\n        \"avatarUrl\": \"\"\n    }\n]\n  \nfunction getContactAvatarUrl(keyword) {\n    return `https://source.unsplash.com/300x300/?portrait&${keyword}`;\n  }\n\n  contacts.forEach(contact => {\n    const avatarUrl = getContactAvatarUrl(contact.keyword);\n    contact.avatarUrl = avatarUrl;\n  });\nfunction sort(arr) {\n    return arr.sort((a, b) => a.name.localeCompare(b.name, undefined, { sensitivity: 'base' }))\n}\n\nfunction getContacts(filterBy = null) {\n    return new Promise((resolve, reject) => {\n        var contactsToReturn = contacts\n        if (filterBy) {\n            contactsToReturn = filter(filterBy)\n        }\n        resolve(sort(contactsToReturn))\n    })\n}\n\nfunction getContactById(id) {\n    return new Promise((resolve, reject) => {\n        const contact = contacts.find(contact => contact._id === id)\n        contact ? resolve(contact) : reject(`Contact id ${id} not found!`)\n    })\n}\n\nfunction deleteContact(id) {\n    return new Promise((resolve, reject) => {\n        const index = contacts.findIndex(contact => contact._id === id)\n        if (index !== -1) {\n            contacts.splice(index, 1)\n        }\n\n        resolve(contacts)\n    })\n}\n\nfunction _updateContact(contact) {\n    return new Promise((resolve, reject) => {\n        const index = contacts.findIndex(c => contact._id === c._id)\n        if (index !== -1) {\n            contacts[index] = contact\n        }\n        resolve(contact)\n    })\n}\n\nfunction _addContact(contact) {\n    return new Promise((resolve, reject) => {\n        contact._id = _makeId()\n        contacts.push(contact)\n        resolve(contact)\n    })\n}\n\nfunction saveContact(contact) {\n    return contact._id ? _updateContact(contact) : _addContact(contact)\n}\n\nfunction getEmptyContact() {\n    return {\n        name: '',\n        email: '',\n        phone: ''\n    }\n}\n\nfunction filter(filterBy) {\n    const keys = Object.keys(filterBy)\n    if (keys.every(field => !filterBy[field])) return contacts\n    return contacts.filter(contact => {\n        return keys.some(field => {\n            const filterValue = filterBy[field]\n            const fieldValue = contact[field]\n            if (!filterValue || !fieldValue) return false\n            const regex = new RegExp(filterValue.toString().toLocaleLowerCase(), 'i')\n            return regex.test(fieldValue.toString())\n        })\n    })\n}\n\nfunction _makeId(length = 10) {\n    var txt = ''\n    var possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789'\n    for (let i = 0; i < length; i++) {\n        txt += possible.charAt(Math.floor(Math.random() * possible.length))\n    }\n    return txt\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}