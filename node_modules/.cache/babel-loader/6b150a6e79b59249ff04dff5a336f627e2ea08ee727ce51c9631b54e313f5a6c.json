{"ast":null,"code":"import { storageService } from \"./storage.service\";\nconst USER_KEY = 'loggedInUser';\nfunction getUser() {\n  let user = storageService.load(USER_KEY);\n  if (user) return user;else user = {\n    name: 'Ochoa Hyde',\n    coins: 100,\n    moves: []\n  };\n  storageService.save(USER_KEY, user);\n  return user;\n}\nfunction signup(name) {\n  const user = {\n    name,\n    coins: 100,\n    moves: []\n  };\n  storageService.save(USER_KEY, user);\n}\nfunction logout() {\n  storageService.remove(USER_KEY);\n}\nfunction addMove(contact, amount) {\n  const user = storageService.load(USER_KEY);\n  const newMove = {\n    toId: contact._id,\n    to: contact.name,\n    at: Date.now(),\n    amount\n  };\n  user.coins -= amount;\n  user.moves.unshift(newMove);\n  storageService.store(USER_KEY, user);\n  return user;\n}\nexport const userService = {\n  getUser,\n  signup,\n  addMove,\n  logout\n};","map":{"version":3,"names":["storageService","USER_KEY","getUser","user","load","name","coins","moves","save","signup","logout","remove","addMove","contact","amount","newMove","toId","_id","to","at","Date","now","unshift","store","userService"],"sources":["C:/Users/rania/Desktop/Coding/btcoinrania/src/services/user.service.js"],"sourcesContent":["import { storageService } from \"./storage.service\"\r\n\r\nconst USER_KEY = 'loggedInUser'\r\n\r\nfunction getUser() {\r\n  let user = storageService.load(USER_KEY)\r\n  if (user) return user\r\n  else user = {\r\n    name: 'Ochoa Hyde',\r\n    coins: 100,\r\n    moves: [],\r\n  }\r\n  storageService.save(USER_KEY, user)\r\n  return user\r\n}\r\n\r\nfunction signup(name) {\r\n  const user = {\r\n    name,\r\n    coins: 100,\r\n    moves: [],\r\n  }\r\n  storageService.save(USER_KEY, user)\r\n}\r\n\r\nfunction logout(){\r\n  storageService.remove(USER_KEY)\r\n}\r\n\r\nfunction addMove(contact, amount) {\r\n  const user = storageService.load(USER_KEY)\r\n  const newMove = {\r\n    toId: contact._id,\r\n    to: contact.name,\r\n    at: Date.now(),\r\n    amount,\r\n  }\r\n  user.coins -= amount\r\n  user.moves.unshift(newMove)\r\n  storageService.store(USER_KEY, user)\r\n  return user\r\n}\r\n\r\nexport const userService = {\r\n  getUser,\r\n  signup,\r\n  addMove,\r\n  logout,\r\n}\r\n"],"mappings":"AAAA,SAASA,cAAc,QAAQ,mBAAmB;AAElD,MAAMC,QAAQ,GAAG,cAAc;AAE/B,SAASC,OAAOA,CAAA,EAAG;EACjB,IAAIC,IAAI,GAAGH,cAAc,CAACI,IAAI,CAACH,QAAQ,CAAC;EACxC,IAAIE,IAAI,EAAE,OAAOA,IAAI,MAChBA,IAAI,GAAG;IACVE,IAAI,EAAE,YAAY;IAClBC,KAAK,EAAE,GAAG;IACVC,KAAK,EAAE;EACT,CAAC;EACDP,cAAc,CAACQ,IAAI,CAACP,QAAQ,EAAEE,IAAI,CAAC;EACnC,OAAOA,IAAI;AACb;AAEA,SAASM,MAAMA,CAACJ,IAAI,EAAE;EACpB,MAAMF,IAAI,GAAG;IACXE,IAAI;IACJC,KAAK,EAAE,GAAG;IACVC,KAAK,EAAE;EACT,CAAC;EACDP,cAAc,CAACQ,IAAI,CAACP,QAAQ,EAAEE,IAAI,CAAC;AACrC;AAEA,SAASO,MAAMA,CAAA,EAAE;EACfV,cAAc,CAACW,MAAM,CAACV,QAAQ,CAAC;AACjC;AAEA,SAASW,OAAOA,CAACC,OAAO,EAAEC,MAAM,EAAE;EAChC,MAAMX,IAAI,GAAGH,cAAc,CAACI,IAAI,CAACH,QAAQ,CAAC;EAC1C,MAAMc,OAAO,GAAG;IACdC,IAAI,EAAEH,OAAO,CAACI,GAAG;IACjBC,EAAE,EAAEL,OAAO,CAACR,IAAI;IAChBc,EAAE,EAAEC,IAAI,CAACC,GAAG,EAAE;IACdP;EACF,CAAC;EACDX,IAAI,CAACG,KAAK,IAAIQ,MAAM;EACpBX,IAAI,CAACI,KAAK,CAACe,OAAO,CAACP,OAAO,CAAC;EAC3Bf,cAAc,CAACuB,KAAK,CAACtB,QAAQ,EAAEE,IAAI,CAAC;EACpC,OAAOA,IAAI;AACb;AAEA,OAAO,MAAMqB,WAAW,GAAG;EACzBtB,OAAO;EACPO,MAAM;EACNG,OAAO;EACPF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}