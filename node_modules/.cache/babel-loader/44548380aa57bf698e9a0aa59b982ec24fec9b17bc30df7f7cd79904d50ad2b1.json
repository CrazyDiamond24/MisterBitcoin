{"ast":null,"code":"const INITIAL_STATE = {\n  contacts: null,\n  filterBy: null\n};\n\n// action = {type: SET_CONTACTS, contacts: [...]}\nexport function contactReducer() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INITIAL_STATE;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case 'SET_CONTACTS':\n      return {\n        ...state,\n        contacts: action.contacts\n      };\n    case 'ADD_CONTACT':\n      return {\n        ...state,\n        contacts: [...state.contacts, action.contact]\n      };\n    case 'REMOVE_CONTACT':\n      return {\n        ...state,\n        contacts: state.contacts.filter(contact => contact._id !== action.contactId)\n      };\n    case 'UPDATE_CONTACT':\n      return {\n        ...state,\n        contacts: state.contacts.map(contact => contact._id === action.contact._id ? action.contact : contact)\n      };\n    case 'SET_FILTER_BY':\n      return {\n        ...state,\n        filterBy: {\n          ...action.filterBy\n        }\n      };\n    default:\n      return state;\n  }\n}","map":{"version":3,"names":["INITIAL_STATE","contacts","filterBy","contactReducer","state","arguments","length","undefined","action","type","contact","filter","_id","contactId","map"],"sources":["C:/Users/rania/Desktop/Coding/btcoinrania/src/store/reducers/contactReducer.js"],"sourcesContent":["const INITIAL_STATE = {\n    contacts: null,\n    filterBy: null\n}\n\n\n// action = {type: SET_CONTACTS, contacts: [...]}\nexport function contactReducer(state = INITIAL_STATE, action) {\n\n    switch (action.type) {\n        case 'SET_CONTACTS':\n            return {\n                ...state,\n                contacts: action.contacts\n            }\n\n        case 'ADD_CONTACT':\n            return {\n                ...state,\n                contacts: [...state.contacts, action.contact]\n            }\n\n        case 'REMOVE_CONTACT':\n            return {\n                ...state,\n                contacts: state.contacts.filter(contact => contact._id !== action.contactId)\n            }\n\n        case 'UPDATE_CONTACT':\n            return {\n                ...state,\n                contacts: state.contacts.map(contact => contact._id === action.contact._id ? action.contact : contact)\n            }\n\n        case 'SET_FILTER_BY':\n            return {\n                ...state,\n                filterBy: { ...action.filterBy }\n            }\n\n        default:\n            return state;\n    }\n}"],"mappings":"AAAA,MAAMA,aAAa,GAAG;EAClBC,QAAQ,EAAE,IAAI;EACdC,QAAQ,EAAE;AACd,CAAC;;AAGD;AACA,OAAO,SAASC,cAAcA,CAAA,EAAgC;EAAA,IAA/BC,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAGL,aAAa;EAAA,IAAEQ,MAAM,GAAAH,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EAExD,QAAQC,MAAM,CAACC,IAAI;IACf,KAAK,cAAc;MACf,OAAO;QACH,GAAGL,KAAK;QACRH,QAAQ,EAAEO,MAAM,CAACP;MACrB,CAAC;IAEL,KAAK,aAAa;MACd,OAAO;QACH,GAAGG,KAAK;QACRH,QAAQ,EAAE,CAAC,GAAGG,KAAK,CAACH,QAAQ,EAAEO,MAAM,CAACE,OAAO;MAChD,CAAC;IAEL,KAAK,gBAAgB;MACjB,OAAO;QACH,GAAGN,KAAK;QACRH,QAAQ,EAAEG,KAAK,CAACH,QAAQ,CAACU,MAAM,CAACD,OAAO,IAAIA,OAAO,CAACE,GAAG,KAAKJ,MAAM,CAACK,SAAS;MAC/E,CAAC;IAEL,KAAK,gBAAgB;MACjB,OAAO;QACH,GAAGT,KAAK;QACRH,QAAQ,EAAEG,KAAK,CAACH,QAAQ,CAACa,GAAG,CAACJ,OAAO,IAAIA,OAAO,CAACE,GAAG,KAAKJ,MAAM,CAACE,OAAO,CAACE,GAAG,GAAGJ,MAAM,CAACE,OAAO,GAAGA,OAAO;MACzG,CAAC;IAEL,KAAK,eAAe;MAChB,OAAO;QACH,GAAGN,KAAK;QACRF,QAAQ,EAAE;UAAE,GAAGM,MAAM,CAACN;QAAS;MACnC,CAAC;IAEL;MACI,OAAOE,KAAK;EAAC;AAEzB"},"metadata":{},"sourceType":"module","externalDependencies":[]}